{"version":3,"sources":["components/ErrorCard/index.module.css","components/PerPage/index.module.css","app.module.css","components/Header/AddProduct/index.module.css","components/Forms/EditProductForm/index.module.css","pages/SingleOrderPage/index.module.css","pages/OrdersPage/index.module.css","components/Forms/Form/index.module.css","components/ProductCard/ProductCardExtendedQuantity/index.module.css","hooks/usePriceInputs.js","utils/createApiRequestActions.js","utils/constants.js","api/apiRoutes.js","api/client.js","api/productService.js","utils/makeError.js","store/productsSlice.js","utils/pruneObject.js","utils/toSearchObject.js","PropTypes/options.js","components/CountryFilter/index.js","components/ErrorCard/index.js","components/Pagination/index.js","components/PerPage/index.js","components/Preloader/index.js","components/PriceFilter/index.js","store/cartSlice.js","routes/routes.js","components/ProductCard/index.js","components/ProductList/index.js","hooks/useDebouncedValues.js","pages/ProductsPage/index.js","components/ProductCard/ProductCardExtended/index.js","pages/ProductInfo/index.js","components/ProductCard/ProductCardExtendedQuantity/index.js","pages/CartPage/index.js","components/Header/Cart/index.js",".yup/productSchema.js","components/Forms/Form/Form.js","components/Forms/AddProductForm/index.js","components/Modal/index.js","components/Header/AddProduct/index.js","components/Header/index.js","layouts/MainLayout/index.js","api/orderService.js","store/ordersSlice.js","sagas/createOrderSaga.js","sagas/fetchOrderSaga.js","rootSaga.js","store/store.js","components/ProductCard/ProductCardEditable/index.js","components/ProductList/ProductListEditable/index.js","components/Forms/EditProductForm/index.js","PropTypes/productTypes.js","pages/MyProductsPage/index.js","components/ProductCard/ProductCardOrder/index.js","components/OrderCard/index.js","pages/SingleOrderPage/index.js","pages/OrdersPage/index.js","utils/mapReverse.js","App.js","index.js","components/ProductCard/ProductCardExtended/index.module.css","components/Modal/index.module.css","components/ProductCard/ProductCardEditable/index.module.css","components/ProductCard/index.module.css","components/Preloader/index.module.css","components/PriceFilter/index.module.css","pages/ProductsPage/index.module.css","components/Header/index.module.css","components/Header/Cart/index.module.css","pages/MyProductsPage/index.module.css","components/Forms/formStyles.module.css","pages/CartPage/index.module.css","components/ProductCard/ProductCardOrder/index.module.css","components/OrderCard/index.module.css","components/Pagination/index.module.css","layouts/MainLayout/index.module.css"],"names":["module","exports","usePriceInputs","searchParams","useState","get","minPrice","setMinPrice","maxPrice","setMaxPrice","regex","handleMinPrice","e","test","target","value","handleMaxPrice","validateRange","parseInt","length","createApiRequestActions","type","init","createAction","payload","start","success","data","error","orderByIdActions","createOrderActions","options","label","paginationOptions","API_ROUTES","id","require","config","httpClient","axios","create","baseURL","headers","Authorization","process","getPage","page","parameters","a","params","perPage","response","getEditablePage","editable","productService","getById","getAPI_ROUTES","PRODUCT_BY_ID","postProduct","post","product","isError","message","editProduct","patch","productsAdapter","createEntityAdapter","initialState","getInitialState","paginationInfo","totalItems","status","fetchProducts","createAsyncThunk","fetchEditableProducts","productsSlice","createSlice","name","reducers","setPage","state","action","setPerPage","resetProductsSlice","extraReducers","builder","addCase","pending","fulfilled","setAll","items","rejected","setOne","actions","addProduct","selectPaginationInfo","products","selectStatus","getSelectors","selectProductById","selectAll","selectById","selectProductIds","selectIds","pruneObject","obj","object","Object","keys","forEach","Array","isArray","toSearchObject","pair","defineProperty","writable","enumerable","PropTypes","string","isRequired","number","CountryFilter","handleCountryChange","selectedCountries","isMulti","onChange","ErrorCard","className","st","onClick","window","location","reload","Pagination","handler","useEffect","scrollTo","behavior","top","pageAmount","Math","ceil","pages","useMemo","arr","i","push","group","startIndex","floor","slice","getPaginationGroup","paginationContainer","map","activePage","PerPage","handlePerPageChange","selectedPerPage","Preloader","wrapper","profileMainLoader","loader","circularLoader","viewBox","loaderPath","cx","cy","r","fill","stroke","strokeWidth","PriceFilter","handlers","priceFilter","inputWrapper","min","step","onBlur","input","textBetweenInputs","cartAdapter","cartSlice","resetCartSlice","productToUpdate","entities","upsertOne","quantity","removeProduct","removeOne","incrementProduct","updateOne","changes","decrementProduct","setQuantity","numb","selectCartStatus","cart","selectAllCartProducts","selectCartProductById","selectCartProductIds","ROUTE_PATHS","HOME","PRODUCT","CART","MY_PRODUCTS","ORDER","MY_ORDERS","PRODUCT_ID","ORDER_ID","ProductCard","productId","dispatch","useDispatch","useSelector","cardContainer","cardInner","generalInfo","productName","to","origin","buyInfo","style","textAlign","price","buyButton","ProductList","productIds","useDebouncedValues","ms","useDebounce","debouncedCountries","debouncedMinPrice","ProductsPage","useSearchParams","setSearchParams","split","country","find","option","setSelectedCountries","setSelectedPerPage","priceHandlers","handleSearch","preventDefault","origins","el","debouncedMaxPrice","productPageWrapper","onSubmit","selected","filterLabel","filterSearch","p","ProductCardExtended","storeProduct","setProduct","display","additionalInfo","moment","createdAt","format","updatedAt","ProductInfo","useParams","ProductCardExtendedQuantity","quantityForm","quantityButton","quantityInput","pattern","CartPage","navigate","useNavigate","reduce","prev","curr","cartPageWrapper","totalPrice","submitOrder","Cart","useLocation","pathname","link","flex","productSchema","yup","max","required","typeError","integer","positive","Form","handleSubmit","formDisabled","errors","register","control","submitError","submitMessage","children","disabled","addProductFieldset","inputLabelWrapper","formLabel","formInput","errorMessage","render","field","includes","submitSuccess","AddProductForm","onClose","setSubmitMessage","setSubmitError","setFormDisabled","useForm","resolver","yupResolver","formState","setTimeout","Modal","show","title","titleContent","createPortal","modal","modalContent","stopPropagation","modalHeader","modalTitle","modalBody","modalFooter","modalCloseButton","document","querySelector","AddProduct","setShow","handleClose","addProductButton","Header","headerStyle","headerWrapper","logo","MainLayout","siteContainer","mainContainer","orderService","postOrder","requestObject","order","pieces","count","getAll","ordersAdapter","fetchOrders","ordersSlice","resetOrdersSlice","selectOrdersStatus","orders","selectOrderById","selectOrderIds","createOrder","createOrderWatcher","put","call","takeLatest","fetchOrder","fetchOrderWatcher","rootSaga","all","sagaMiddleware","createSagaMiddleware","configureStore","reducer","productsReducer","cartReducer","ordersReducer","middleware","getDefaultMiddleware","concat","run","ProductCardEditable","handleFormToggle","ProductListEditable","EditProductForm","bool","initialObject","defaultValues","isDirty","reset","updateObj","formActions","formStyles","formButton","clearButton","editButton","MyProductsPage","initFormObject","setInitFormObject","ProductCardOrder","productCardOrder","OrderCard","isList","orderContainer","border","total","SingleOrderPage","ordersContainer","OrdersPage","orderIds","array","result","mapReverse","orderId","App","app","store","path","element","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.014e4659.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"ErrorCard_error__Oqzwq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"perPage\":\"PerPage_perPage__xfWMa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__2rvIg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addProductButton\":\"AddProduct_addProductButton__3p3m6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorMessage\":\"EditProductForm_errorMessage__C3FRw\",\"message\":\"EditProductForm_message__1s29b\",\"submitError\":\"EditProductForm_submitError__2Bcvx\",\"submitSuccess\":\"EditProductForm_submitSuccess__29_rJ\",\"inputLabelWrapper\":\"EditProductForm_inputLabelWrapper__27upP\",\"formInput\":\"EditProductForm_formInput__3TGA_\",\"addProductFieldset\":\"EditProductForm_addProductFieldset__37EPu\",\"formActions\":\"EditProductForm_formActions__3coE6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ordersContainer\":\"SingleOrderPage_ordersContainer__1REUU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ordersContainer\":\"OrdersPage_ordersContainer__8JuhA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorMessage\":\"Form_errorMessage__1xRQ1\",\"message\":\"Form_message__2CP07\",\"submitError\":\"Form_submitError__2znwg\",\"submitSuccess\":\"Form_submitSuccess__2vfyX\",\"inputLabelWrapper\":\"Form_inputLabelWrapper__1utef\",\"formInput\":\"Form_formInput__2tBfV\",\"addProductFieldset\":\"Form_addProductFieldset__1mYgI\",\"formActions\":\"Form_formActions__3Fv2f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"ProductCardExtendedQuantity_cardContainer__2Qu38\",\"cardInner\":\"ProductCardExtendedQuantity_cardInner__3Ff7w\",\"productName\":\"ProductCardExtendedQuantity_productName__1T1JL\",\"generalInfo\":\"ProductCardExtendedQuantity_generalInfo__3kNAi\",\"buyInfo\":\"ProductCardExtendedQuantity_buyInfo__1UwLV\",\"buyButton\":\"ProductCardExtendedQuantity_buyButton__1kfAZ\",\"additionalInfo\":\"ProductCardExtendedQuantity_additionalInfo__37tgx\",\"price\":\"ProductCardExtendedQuantity_price__2yRCI\",\"quantityInput\":\"ProductCardExtendedQuantity_quantityInput__lunUu\",\"quantityForm\":\"ProductCardExtendedQuantity_quantityForm__2tgR0\",\"quantityButton\":\"ProductCardExtendedQuantity_quantityButton__2f7HX\"};","import { useState } from 'react';\n\nconst usePriceInputs = (searchParams) => {\n  const [minPrice, setMinPrice] = useState(searchParams.get('minPrice') || '');\n  const [maxPrice, setMaxPrice] = useState(searchParams.get('maxPrice') || '');\n\n  const regex = /^[0-9]*$/;\n\n  const handleMinPrice = (e) => {\n    if (regex.test(e.target.value)) setMinPrice(e.target.value);\n  };\n  const handleMaxPrice = (e) => {\n    if (regex.test(e.target.value)) setMaxPrice(e.target.value);\n  };\n\n  const validateRange = () => {\n    if (parseInt(minPrice, 10) > parseInt(maxPrice, 10) && maxPrice.length) setMaxPrice(minPrice);\n  };\n\n  return {\n    minPrice, handleMinPrice, maxPrice, handleMaxPrice, validateRange, setMinPrice, setMaxPrice,\n  };\n};\n\nexport default usePriceInputs;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport default function createApiRequestActions(\n  type,\n  prepareAction = (args) => ({ payload: args.payload })\n) {\n  // create only necessary actions\n  return {\n    init: createAction(\n      `${type}_INIT`,\n      (payload = {}) => ({ payload })\n    ),\n    start: createAction(\n      `${type}_START`,\n      (payload = {}) => ({ payload })\n    ),\n    success: createAction(\n      `${type}_SUCCESS`,\n      (payload = { data: {} }) => ({ payload })\n    ),\n    error: createAction(\n      `${type}_ERROR`,\n      (payload = {}) => ({ payload })\n    ),\n  };\n}\n","import createApiRequestActions from './createApiRequestActions';\n\nexport const PER_PAGE = 25;\nexport const placeholder = 0; // unnecessary now\n\nexport const orderByIdActions = createApiRequestActions('FETCH_ORDER');\nexport const createOrderActions = createApiRequestActions('CREATE_ORDER');\n\nexport const options = [\n  { value: 'europe', label: 'Europe' },\n  { value: 'usa', label: 'USA' },\n  { value: 'africa', label: 'Africa' },\n  { value: 'asia', label: 'Asia' },\n];\n\nexport const paginationOptions = [\n  { value: 10, label: '10' },\n  { value: 25, label: '25' },\n  { value: 50, label: '50' },\n];\n","export const API_ROUTES = {\n  ORDERS: 'orders',\n  ORDER_BY_ID: (id) => `orders/${id}`,\n  PRODUCTS: 'products',\n  PRODUCT_BY_ID: (id) => `products/${id}`,\n};\n","import axios from 'axios';\n\nrequire('dotenv').config();\n\nexport const httpClient = axios.create({\n  baseURL: 'https://yalantis-react-school-api.yalantis.com/api/v1',\n  headers: { Authorization: process.env.REACT_APP_API_KEY },\n});\n","import { PER_PAGE } from '../utils/constants';\nimport { makeError } from '../utils/makeError';\nimport { API_ROUTES } from './apiRoutes';\nimport { httpClient } from './client';\n\nconst getPage = async (page, parameters) => {\n  // if perPage provided, gets it from parameters\n  const params = { page, perPage: PER_PAGE, ...parameters };\n  const response = await httpClient.get(API_ROUTES.PRODUCTS, { params });\n  return response.data;\n};\n\nconst getEditablePage = async (page, parameters) => {\n  // if perPage provided, gets it from parameters\n  const params = {\n    page, editable: true, perPage: PER_PAGE, ...parameters,\n  };\n  const response = await httpClient.get(API_ROUTES.PRODUCTS, { params });\n  return response.data;\n};\n\nconst getById = async (id) => {\n  const response = await httpClient.getAPI_ROUTES.PRODUCT_BY_ID(id);\n  return response.data;\n};\n\nconst postProduct = async (payload) => {\n  try {\n    const response = await httpClient.post(API_ROUTES.PRODUCTS, { product: payload });\n    return response.data;\n  } catch (err) {\n    return makeError(err.response.data.error.message);\n  }\n};\n\nconst editProduct = async (payload) => {\n  const response = await httpClient.patch(API_ROUTES.PRODUCT_BY_ID(payload.id), { product: payload.product });\n  return response.data;\n};\n\nconst productService = {\n  getPage,\n  getById,\n  postProduct,\n  getEditablePage,\n  editProduct,\n};\n\nexport default productService;\n","export const makeError = (content) => ({\n  isError: true,\n  message: content,\n});\n","import {\n  createAsyncThunk,\n  createEntityAdapter,\n  createSlice,\n} from '@reduxjs/toolkit';\nimport productService from '../api/productService';\n\nconst productsAdapter = createEntityAdapter();\n\nconst initialState = productsAdapter.getInitialState({\n  paginationInfo: {\n    totalItems: 0,\n    perPage: 0,\n    page: 1,\n  },\n  status: 'idle',\n  error: null,\n});\n\nexport const fetchProducts = createAsyncThunk(\n  'products/fetchProducts',\n  async ({ page, parameters }) => {\n    const response = await productService.getPage(page, parameters);\n    return response;\n  }\n);\n\nexport const fetchEditableProducts = createAsyncThunk(\n  'products/fetchEditableProducts',\n  async ({ page, parameters }) => {\n    const response = await productService.getEditablePage(page, parameters);\n    return response;\n  }\n);\n\nexport const editProduct = createAsyncThunk(\n  'products/editProduct',\n  async (payload) => {\n    const response = await productService.editProduct(payload);\n    return response;\n  }\n);\n\nconst productsSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {\n    setPage: (state, action) => {\n      const page = action.payload;\n      state.paginationInfo.page = page;\n    },\n    setPerPage: (state, action) => {\n      const perPage = action.payload;\n      state.paginationInfo.perPage = perPage;\n    },\n    resetProductsSlice: (state) => initialState,\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(fetchProducts.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchProducts.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        productsAdapter.setAll(state, action.payload.items);\n        state.paginationInfo = {\n          totalItems: action.payload.totalItems,\n          perPage: action.payload.perPage,\n          page: action.payload.page,\n        };\n      })\n      .addCase(fetchProducts.rejected, (state) => {\n        state.status = 'error';\n      })\n      .addCase(fetchEditableProducts.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchEditableProducts.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        productsAdapter.setAll(state, action.payload.items);\n        state.paginationInfo = {\n          totalItems: action.payload.totalItems,\n          perPage: action.payload.perPage,\n          page: action.payload.page,\n        };\n      })\n      .addCase(fetchEditableProducts.rejected, (state) => {\n        state.status = 'error';\n      })\n      .addCase(editProduct.fulfilled, productsAdapter.setOne);\n  },\n});\n\nexport const {\n  addProduct, setPage, setPerPage, resetProductsSlice,\n} = productsSlice.actions;\n\nexport default productsSlice.reducer;\n\nexport const selectPaginationInfo = (state) => state.products.paginationInfo;\n\nexport const selectStatus = (state) => state.products.status;\n\nexport const {\n  selectAll: selectAllProducts,\n  selectById: selectProductById,\n  selectIds: selectProductIds,\n} = productsAdapter.getSelectors((state) => state.products);\n","export const pruneObject = (obj) => {\n  // eslint-disable-next-line prefer-const\n  let object = { ...obj };\n  Object.keys(obj).forEach((e) => {\n    if (!object[e] || (Array.isArray(object[e]) && !object[e][0].length)) {\n      delete object[e];\n    }\n  });\n  return object;\n};\n","export const toSearchObject = (params) => {\n  // eslint-disable-next-line prefer-const\n  let object = {};\n  const pairs = [...params];\n  pairs.forEach((pair) => {\n    if (pair[1]) {\n      Object.defineProperty(object, pair[0], {\n        value: pair[1],\n        writable: true,\n        enumerable: true,\n      });\n    }\n  });\n  return object;\n};\n","import PropTypes from 'prop-types';\n\nexport const optionType = {\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n};\nexport const optionTypeNumber = {\n  value: PropTypes.number.isRequired,\n  label: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\nimport { optionType } from '../../PropTypes/options';\n\nconst CountryFilter = ({ options, handleCountryChange, selectedCountries }) => (\n  <Select\n    isMulti\n    options={options}\n    onChange={handleCountryChange}\n    value={selectedCountries}\n  />\n);\n\nCountryFilter.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.shape(optionType)),\n  handleCountryChange: PropTypes.func.isRequired,\n  selectedCountries: PropTypes.arrayOf(PropTypes.shape(optionType)),\n};\n\nexport default CountryFilter;\n","import React from 'react';\nimport st from './index.module.css';\n\nconst ErrorCard = () => {\n  const handleReload = () => {\n    window.location.reload();\n  };\n  return (\n    <div className={st.error}>\n      <h1>Something went wrong</h1>\n      <button onClick={handleReload}>Try Again</button>\n    </div>\n  );\n};\n\nexport default ErrorCard;\n","import React, { useMemo, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport st from './index.module.css';\n\nconst Pagination = ({\n  totalItems, perPage, handler, page,\n}) => {\n  useEffect(() => {\n    window.scrollTo({ behavior: 'smooth', top: '0px' });\n  }, [page]);\n  const pageAmount = Math.ceil(totalItems / perPage);\n  const pageLimit = 5;\n  const pages = useMemo(() => {\n    const arr = [];\n    for (let i = 1; i <= pageAmount; i += 1) arr.push(i);\n    return arr;\n  });\n  const nextPage = () => {\n    if (page !== pageAmount) {\n      handler(page + 1);\n    }\n  };\n  const prevPage = () => {\n    if (page !== 1) {\n      handler(page - 1);\n    }\n  };\n  const changePage = (p) => {\n    handler(p);\n  };\n  const getPaginationGroup = () => {\n    const startIndex = Math.floor((page - 1) / pageLimit) * pageLimit;\n    const group = pages.slice(startIndex, startIndex + 5);\n    return group;\n  };\n  const group = getPaginationGroup();\n  return (\n    <div className={st.paginationContainer}>\n      <button onClick={prevPage}>〈</button>\n      {group.map((e) => (\n        <button\n          onClick={() => changePage(e)}\n          key={e}\n          className={e === page ? st.activePage : ''}\n        >\n          {e}\n        </button>\n      ))}\n      <button onClick={nextPage}>〉</button>\n    </div>\n  );\n};\n\nPagination.propTypes = {\n  totalItems: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  handler: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n};\n\nexport default Pagination;\n","import React from 'react';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\nimport st from './index.module.css';\nimport { optionTypeNumber } from '../../PropTypes/options';\n\nconst PerPage = ({ options, handlePerPageChange, selectedPerPage }) => (\n  <Select\n    options={options}\n    onChange={handlePerPageChange}\n    value={selectedPerPage}\n    className={st.perPage}\n  />\n);\n\nPerPage.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.shape(optionTypeNumber)),\n  handlePerPageChange: PropTypes.func.isRequired,\n  selectedPerPage: PropTypes.shape(optionTypeNumber),\n};\n\nexport default PerPage;\n","import React from 'react';\nimport st from './index.module.css';\n\nconst Preloader = () => (\n  <div className={st.wrapper}>\n    <div className={st.profileMainLoader}>\n      <div className={st.loader}>\n        <svg className={st.circularLoader} viewBox=\"25 25 50 50\">\n          <circle\n            className={st.loaderPath}\n            cx=\"50\"\n            cy=\"50\"\n            r=\"20\"\n            fill=\"none\"\n            stroke=\"#70c542\"\n            strokeWidth=\"2\"\n          />\n        </svg>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Preloader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport st from './index.module.css';\n\nconst PriceFilter = ({ handlers, minPrice, maxPrice }) => (\n  <div className={st.priceFilter}>\n    <div className={st.inputWrapper}>\n      <input\n        type=\"text\"\n        min=\"1\"\n        step=\"1\"\n        value={minPrice}\n        onChange={handlers.handleMinPrice}\n        onBlur={handlers.validateRange}\n        className={st.input}\n      />\n      <span className={st.textBetweenInputs}>to</span>\n      <input\n        type=\"text\"\n        min=\"1\"\n        step=\"1\"\n        value={maxPrice}\n        onChange={handlers.handleMaxPrice}\n        onBlur={handlers.validateRange}\n        className={st.input}\n      />\n    </div>\n  </div>\n);\n\nPriceFilter.propTypes = {\n  handlers: PropTypes.shape(PropTypes.func.isRequired),\n  minPrice: PropTypes.string,\n  maxPrice: PropTypes.string,\n};\n\nexport default PriceFilter;\n","import { createEntityAdapter, createSlice } from '@reduxjs/toolkit';\nimport { createOrderActions } from '../utils/constants';\n\nconst cartAdapter = createEntityAdapter(); // each entity will also have *quantity* property\n\nconst initialState = cartAdapter.getInitialState({\n  status: 'idle',\n});\n\n// commented code according to hw-4 guidelines\n\n// export const postOrder = createAsyncThunk(\n//   'cart/postOrder',\n//   async (payload) => {\n//     const response = await orderService.postOrder(payload);\n//     return response;\n//   }\n// );\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    resetCartSlice: (state) => initialState,\n    addProduct: (state, action) => {\n      const productToUpdate = state.entities[action.payload.id]; // might not exist\n      // if productToUpdate doesn't exist, insert payload object with additional property \"quantity\"\n      if (!productToUpdate) return cartAdapter.upsertOne(state, { ...action.payload, quantity: 1 });\n      // if productToUpdate exists, update the existing one\n      return cartAdapter.upsertOne(state, {\n        ...productToUpdate,\n        quantity: productToUpdate.quantity + 1,\n      });\n    },\n    removeProduct: (state, action) => {\n      if (!state.entities[action.payload]) return state;\n      return cartAdapter.removeOne(state, action.payload);\n    },\n    incrementProduct: (state, action) => {\n      const productToUpdate = state.entities[action.payload];\n\n      return cartAdapter.updateOne(state, {\n        id: action.payload,\n        changes: { quantity: productToUpdate.quantity + 1 },\n      });\n    },\n    decrementProduct: (state, action) => {\n      const productToUpdate = state.entities[action.payload];\n      if (productToUpdate.quantity > 1) {\n        return cartAdapter.updateOne(state, {\n          id: action.payload,\n          changes: { quantity: productToUpdate.quantity - 1 },\n        });\n      }\n      return state;\n    },\n    setQuantity: (state, action) => {\n      const numb = parseInt(action.payload.quantity, 10);\n      if (action.payload.quantity > 0) {\n        return cartAdapter.updateOne(state, {\n          id: action.payload.id,\n          changes: { quantity: numb },\n        });\n      }\n      return state;\n    },\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(createOrderActions.success, (state) => {\n        state.status = 'success';\n        state = initialState;\n      })\n      .addCase(createOrderActions.error, (state) => {\n        state.status = 'error';\n      });\n  },\n});\n\nexport const {\n  addProduct, incrementProduct, decrementProduct, setQuantity, removeProduct, resetCartSlice,\n} = cartSlice.actions;\n\nexport default cartSlice.reducer;\n\nexport const selectCartStatus = (state) => state.cart.status;\n\nexport const {\n  selectAll: selectAllCartProducts,\n  selectById: selectCartProductById,\n  selectIds: selectCartProductIds,\n} = cartAdapter.getSelectors((state) => state.cart);\n","const ROUTE_PATHS = {\n  HOME: '/products',\n  PRODUCT: '/products/:id',\n  CART: '/cart',\n  MY_PRODUCTS: '/products/my',\n  ORDER: '/orders/:id',\n  MY_ORDERS: '/orders',\n  PRODUCT_ID: (id) => `/products/${id}`,\n  ORDER_ID: (id) => `/orders/${id}`,\n};\n\nexport default ROUTE_PATHS;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport st from './index.module.css';\nimport { selectProductById } from '../../store/productsSlice';\nimport { addProduct } from '../../store/cartSlice';\nimport ROUTE_PATHS from '../../routes/routes';\n\nconst ProductCard = ({ productId, className }) => {\n  const dispatch = useDispatch();\n\n  const product = useSelector((state) => selectProductById(state, productId));\n\n  return (\n    <div className={`${className || st.cardContainer}`}>\n      <div className={st.cardInner}>\n        <div className={st.generalInfo}>\n          <h2 className={st.productName}>\n            <Link to={ROUTE_PATHS.PRODUCT_ID(productId)}>{product.name}</Link>\n          </h2>\n          <span>Origin: {product.origin}</span>\n        </div>\n        <div className={st.buyInfo}>\n          <span style={{ textAlign: 'center' }}>{product.price}₴</span>\n          <button\n            className={st.buyButton}\n            onClick={() => dispatch(addProduct(product))}\n          >\n            Buy\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nProductCard.propTypes = {\n  productId: PropTypes.string,\n  className: PropTypes.string,\n};\n\nexport default ProductCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProductCard from '../ProductCard/index';\n\nconst ProductList = ({ productIds }) => productIds.map((id) => <ProductCard productId={id} key={id} />);\n\nProductList.propTypes = {\n  productIds: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default ProductList;\n","import { useDebounce } from 'use-debounce';\n\nconst useDebouncedValues = (selectedCountries, minPrice, maxPrice, ms) => {\n  const [debouncedCountries] = useDebounce(selectedCountries, ms);\n  const [debouncedMinPrice] = useDebounce(minPrice, ms);\n  const [debouncedMaxPrice] = useDebounce(maxPrice, ms);\n  return [debouncedCountries, debouncedMinPrice, debouncedMaxPrice];\n};\n\nexport default useDebouncedValues;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSearchParams } from 'react-router-dom';\nimport usePriceInputs from '../../hooks/usePriceInputs';\nimport {\n  fetchProducts,\n  selectPaginationInfo,\n  selectProductIds,\n  selectStatus,\n  setPage,\n  setPerPage,\n  resetProductsSlice,\n} from '../../store/productsSlice';\nimport { pruneObject } from '../../utils/pruneObject';\nimport { toSearchObject } from '../../utils/toSearchObject';\nimport CountryFilter from '../../components/CountryFilter';\nimport ErrorCard from '../../components/ErrorCard';\nimport Pagination from '../../components/Pagination';\nimport PerPage from '../../components/PerPage';\nimport Preloader from '../../components/Preloader';\nimport PriceFilter from '../../components/PriceFilter';\nimport ProductList from '../../components/ProductList/index';\nimport st from './index.module.css';\nimport useDebouncedValues from '../../hooks/useDebouncedValues';\nimport { options, paginationOptions } from '../../utils/constants';\n\nconst ProductsPage = () => {\n  const dispatch = useDispatch();\n  const products = useSelector(selectProductIds);\n  const paginationInfo = useSelector(selectPaginationInfo);\n\n  const { page } = paginationInfo;\n\n  const status = useSelector(selectStatus);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const [selectedCountries, setSelectedCountries] = useState(\n    searchParams\n      .get('origins')\n      ?.split(',')\n      .map((country) => options.find((option) => option.value === country)) || []\n  );\n  const [selectedPerPage, setSelectedPerPage] = useState(\n    paginationOptions.find((option) => option.value === parseInt(searchParams.get('perPage'), 10))\n    || paginationOptions[0]\n  );\n  const {\n    minPrice, maxPrice, ...priceHandlers\n  } = usePriceInputs(searchParams);\n\n  const handleSearch = (e) => {\n    if (e) e.preventDefault();\n\n    const countries = selectedCountries.map((el) => el.value);\n\n    const params = {\n      origins: [countries],\n      minPrice,\n      maxPrice,\n      perPage: selectedPerPage.value,\n    };\n    const parameters = pruneObject(params);\n    setSearchParams(parameters);\n  };\n\n  const handleCountryChange = (selected) => {\n    setSelectedCountries(selected);\n  };\n  const handlePerPageChange = (selected) => {\n    setSelectedPerPage(selected);\n    dispatch(setPerPage);\n  };\n  const parameters = toSearchObject(searchParams);\n\n  // control request amount by \"status\" property in slice\n  useEffect(() => {\n    if (status !== 'idle' && status !== 'loading') dispatch(fetchProducts({ page, parameters }));\n  }, [page, dispatch, searchParams]);\n\n  const [\n    debouncedCountries,\n    debouncedMinPrice,\n    debouncedMaxPrice,\n  ] = useDebouncedValues(selectedCountries, minPrice, maxPrice, 500);\n  useEffect(() => {\n    if (status !== 'idle') {\n      handleSearch();\n    }\n  }, [debouncedCountries, debouncedMinPrice, debouncedMaxPrice]);\n\n  useEffect(() => {\n    if (status === 'idle') dispatch(fetchProducts({ page: 1, parameters }));\n    return () => {\n      dispatch(resetProductsSlice());\n    };\n  }, []);\n\n  if (status === 'error') return <ErrorCard />;\n  if (status === 'loading' || status === 'idle') return <Preloader />;\n\n  return (\n    <div className={st.productPageWrapper}>\n      <form onSubmit={(e) => handleSearch(e)}>\n        <CountryFilter\n          options={options}\n          handleCountryChange={handleCountryChange}\n          selectedCountries={selectedCountries}\n        />\n        <p className={st.filterLabel}>Price</p>\n        <PriceFilter\n          handlers={priceHandlers}\n          minPrice={minPrice}\n          maxPrice={maxPrice}\n        />\n        <p className={st.filterLabel}>Items per page</p>\n        <PerPage\n          options={paginationOptions}\n          selectedPerPage={selectedPerPage}\n          handlePerPageChange={handlePerPageChange}\n        />\n        <button type=\"submit\" className={st.filterSearch}>Search</button>\n      </form>\n      <ProductList productIds={products} />\n      <Pagination\n        totalItems={paginationInfo.totalItems}\n        perPage={paginationInfo.perPage}\n        page={page}\n        handler={(p) => dispatch(setPage(p))}\n      />\n    </div>\n  );\n};\n\nexport default ProductsPage;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport st from './index.module.css';\nimport { addProduct } from '../../../store/cartSlice';\nimport { selectProductById } from '../../../store/productsSlice';\nimport productService from '../../../api/productService';\nimport Preloader from '../../Preloader';\nimport ROUTE_PATHS from '../../../routes/routes';\n\nconst ProductCardExtended = ({ productId }) => {\n  const dispatch = useDispatch();\n\n  const storeProduct = useSelector((state) => selectProductById(state, productId));\n  const [product, setProduct] = useState(storeProduct);\n\n  useEffect(() => {\n    if (!product) {\n      (async () => {\n        const response = await productService.getById(productId);\n        setProduct(response);\n      })();\n    }\n  }, []);\n\n  if (!product) return <Preloader />;\n\n  return (\n    <div className={st.cardContainer}>\n      <div className={st.cardInner}>\n        <div className={st.generalInfo}>\n          <h2 className={st.productName}>\n            <Link to={ROUTE_PATHS.PRODUCT_ID(productId)}>{product.name}</Link>\n          </h2>\n          <span>Origin: {product.origin}</span>\n        </div>\n        <div style={{ display: 'flex' }}>\n          <div className={st.additionalInfo}>\n            <div>\n              Created: {moment(product.createdAt).format('YYYY-MM-DD HH:MM:SS')}\n            </div>\n            <div>\n              Updated: {moment(product.updatedAt).format('YYYY-MM-DD HH:MM:SS')}\n            </div>\n          </div>\n          <div className={st.buyInfo}>\n            <span style={{ textAlign: 'center' }}>{product.price}₴</span>\n            <button\n              className={st.buyButton}\n              onClick={() => dispatch(addProduct(product))}\n            >\n              Buy\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nProductCardExtended.propTypes = {\n  productId: PropTypes.string.isRequired,\n};\n\nexport default ProductCardExtended;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport ProductCardExtended from '../../components/ProductCard/ProductCardExtended/index';\n\nconst ProductInfo = () => {\n  const { id } = useParams();\n\n  return <ProductCardExtended productId={id} />;\n};\n\nexport default ProductInfo;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport st from './index.module.css';\nimport {\n  incrementProduct,\n  decrementProduct,\n  setQuantity,\n  selectCartProductById,\n  removeProduct,\n} from '../../../store/cartSlice';\nimport ROUTE_PATHS from '../../../routes/routes';\n\nconst ProductCardExtendedQuantity = ({ productId }) => {\n  const dispatch = useDispatch();\n\n  const product = useSelector((state) => selectCartProductById(state, productId));\n\n  return (\n    <div className={st.cardContainer}>\n      <div className={st.cardInner}>\n        <div className={st.generalInfo}>\n          <h2 className={st.productName}>\n            <Link to={ROUTE_PATHS.PRODUCT_ID(productId)}>{product.name}</Link>\n          </h2>\n          <span>Origin: {product.origin}</span>\n        </div>\n        <div style={{ display: 'flex' }}>\n          <div className={st.additionalInfo}>\n            <div>\n              Created: {moment(product.createdAt).format('YYYY-MM-DD HH:MM:SS')}\n            </div>\n            <div>\n              Updated: {moment(product.updatedAt).format('YYYY-MM-DD HH:MM:SS')}\n            </div>\n            <form\n              className={st.quantityForm}\n              onSubmit={(e) => e.preventDefault()}\n            >\n              <button\n                className={st.quantityButton}\n                onClick={() => dispatch(incrementProduct(productId))}\n              >\n                <span>+</span>\n              </button>\n              <input\n                value={product.quantity}\n                type=\"number\"\n                name=\"quantity\"\n                className={st.quantityInput}\n                min=\"1\"\n                step=\"1\"\n                pattern=\"^[-\\d]\\d*$\"\n                onChange={(e) => dispatch(\n                  setQuantity({ id: productId, quantity: e.target.value })\n                )\n                }\n              ></input>\n              <button\n                className={st.quantityButton}\n                onClick={() => dispatch(decrementProduct(productId))}\n              >\n                -\n              </button>\n            </form>\n          </div>\n          <div className={st.buyInfo}>\n            <span className={st.price}>{product.price}₴</span>\n            <button\n              className={st.buyButton}\n              onClick={() => dispatch(removeProduct(productId))}\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nProductCardExtendedQuantity.propTypes = {\n  productId: PropTypes.string.isRequired,\n};\n\nexport default ProductCardExtendedQuantity;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport st from './index.module.css';\nimport ProductCardExtendedQuantity from '../../components/ProductCard/ProductCardExtendedQuantity';\nimport {\n  resetCartSlice,\n  selectAllCartProducts,\n  selectCartProductIds,\n  selectCartStatus,\n} from '../../store/cartSlice';\nimport ErrorCard from '../../components/ErrorCard';\nimport ROUTE_PATHS from '../../routes/routes';\nimport { createOrderActions } from '../../utils/constants';\n\nconst CartPage = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const productIds = useSelector(selectCartProductIds);\n  const products = useSelector(selectAllCartProducts);\n\n  const status = useSelector(selectCartStatus);\n\n  const price = products.reduce(\n    (prev, curr) => prev + curr.price * curr.quantity,\n    0\n  );\n\n  useEffect(() => () => dispatch(resetCartSlice()), []);\n\n  useEffect(() => {\n    if (status === 'success') {\n      navigate(ROUTE_PATHS.MY_ORDERS);\n    }\n  }, [status]);\n\n  const handleSubmit = () => {\n    if (products.length) dispatch(createOrderActions.init(products));\n  };\n\n  if (status === 'error') return <ErrorCard />;\n\n  return (\n    <div className={st.cartPageWrapper}>\n      {productIds.map((p) => (\n        <ProductCardExtendedQuantity key={p} productId={p} />\n      ))}\n      <h3 className={st.totalPrice}>Total price: {price}₴</h3>\n      <button onClick={handleSubmit} className={st.submitOrder}>Submit order</button>\n    </div>\n  );\n};\n\nexport default CartPage;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link, useLocation } from 'react-router-dom';\nimport ROUTE_PATHS from '../../../routes/routes';\nimport { selectAllCartProducts } from '../../../store/cartSlice';\nimport st from './index.module.css';\n\nconst Cart = () => {\n  const products = useSelector(selectAllCartProducts);\n  const price = products.reduce(\n    (prev, curr) => prev + curr.price * curr.quantity,\n    0\n  );\n  const location = useLocation();\n  if (location.pathname === ROUTE_PATHS.CART) return null;\n  return (\n    <h1 className={st.cart}>\n      <Link to={ROUTE_PATHS.CART} className={st.link}>\n        <div className={st.flex}>\n          Cart\n          <div className={st.price}>{price}</div>\n        </div>\n      </Link>\n    </h1>\n  );\n};\n\nexport default Cart;\n","import * as yup from 'yup';\n\nexport const productSchema = yup.object({\n  name: yup.string()\n    .min(3, 'Name must have 3 or more characters')\n    .max(20, 'Name must have 20 or less characters')\n    .required('Name is required'),\n  price: yup.number()\n    .typeError('Price must be a number')\n    .integer()\n    .positive('Price must be greater than 0')\n    .required('Price is required'),\n  origin: yup.string().required('Origin is required'),\n});","import React from 'react';\nimport { Controller } from 'react-hook-form';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\nimport st from './index.module.css';\nimport { optionType } from '../../../PropTypes/options';\n\nconst Form = ({\n  handleSubmit,\n  onSubmit,\n  formDisabled,\n  errors,\n  register,\n  control,\n  options,\n  submitError = 'Something went wrong',\n  submitMessage = 'Success',\n  children,\n}) => (<form onSubmit={handleSubmit(onSubmit)}>\n  <fieldset disabled={formDisabled} className={st.addProductFieldset}>\n    <div className={st.inputLabelWrapper}>\n      <label className={st.formLabel}>Name</label>\n      <input className={st.formInput} {...register('name')} />\n      <p className={st.errorMessage}>{errors.name?.message}</p>\n    </div>\n    <div className={st.inputLabelWrapper}>\n      <label className={st.formLabel}>Price</label>\n      <input type='number' className={st.formInput} {...register('price')} />\n      <p className={st.errorMessage}>{errors.price?.message}</p>\n    </div>\n    <div className={st.inputLabelWrapper}>\n      <label className={st.formLabel}>Origin</label>\n      <Controller\n        name='origin'\n        control={control}\n        render={({ field: { value, onChange, onBlur } }) => <Select\n          options={options}\n          onBlur={onBlur}\n          onChange={(option) => {\n            onChange(option.value);\n          }}\n          value={options.find((option) => value?.includes(option.value))}\n        />\n\n        }\n      />\n      <p className={st.errorMessage}>{errors.origin?.message}</p>\n    </div>\n\n    <p className={`${submitError ? st.submitError : st.submitSuccess} ${st.message}`}>{submitMessage}</p>\n    {children}\n  </fieldset>\n\n</form>);\n\nForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  formDisabled: PropTypes.bool,\n  options: PropTypes.arrayOf(PropTypes.shape(optionType)),\n  submitError: PropTypes.bool,\n  submitMessage: PropTypes.string,\n  children: PropTypes.element,\n};\n\nexport default Form;\n","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport PropTypes from 'prop-types';\nimport productService from '../../../api/productService';\nimport { options } from '../../../utils/constants';\nimport { productSchema } from '../../../.yup/productSchema';\nimport Form from '../Form/Form';\n\nconst AddProductForm = ({ onClose }) => {\n  const [submitMessage, setSubmitMessage] = useState('');\n  const [submitError, setSubmitError] = useState(false);\n  const [formDisabled, setFormDisabled] = useState(false);\n\n  const {\n    register, control, handleSubmit, formState: { errors },\n  } = useForm({\n    resolver: yupResolver(productSchema),\n  });\n\n  const onSubmit = async (data) => {\n    setFormDisabled(true);\n    const response = await productService.postProduct(data);\n    if (response?.isError) {\n      setSubmitError(true);\n      if (response.message.includes('Duplicate key value violates unique constraint')) {\n        setSubmitMessage('Product with a given name already exists.');\n      } else {\n        setSubmitMessage('Unknown error.');\n      }\n    } else {\n      setSubmitError(false);\n      setSubmitMessage('Product added successfully');\n      setTimeout(onClose, 1000);\n    }\n    setFormDisabled(false);\n  };\n\n  return (\n    <Form\n      handleSubmit={handleSubmit}\n      onSubmit={onSubmit}\n      formDisabled={formDisabled}\n      errors={errors}\n      register={register}\n      control={control}\n      options={options}\n      submitError={submitError}\n      submitMessage={submitMessage}\n    >\n      <input type=\"submit\" />\n    </Form>\n  );\n};\n\nAddProductForm.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default AddProductForm;\n","import React from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport st from './index.module.css';\n\nconst Modal = ({\n  children, show, onClose, title,\n}) => {\n  if (!show) return null;\n\n  const titleContent = title || 'Please provide \\'title\\' prop';\n\n  return createPortal(\n    <div className={st.modal} onClick={onClose}>\n      <div className={st.modalContent} onClick={(e) => e.stopPropagation()}>\n        <div className={st.modalHeader}>\n          <h2 className={st.modalTitle}>{titleContent}</h2>\n        </div>\n        <div className={st.modalBody}>\n          {children}\n        </div>\n        <div className={st.modalFooter}>\n          <button className={st.modalCloseButton} onClick={onClose}>Close</button>\n        </div>\n      </div>\n    </div>,\n    document.querySelector('#root')\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.element,\n  show: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  title: PropTypes.string,\n};\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport AddProductForm from '../../Forms/AddProductForm';\nimport Modal from '../../Modal';\nimport st from './index.module.css';\n\nconst AddProduct = () => {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  return (\n    <div>\n      <h1>\n        <button className={st.addProductButton} onClick={() => setShow(true)}>\n          Add product\n        </button>\n      </h1>\n      <Modal\n        show={show}\n        onClose={handleClose}\n        title=\"Add product\"\n      >\n        <AddProductForm onClose={handleClose} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddProduct;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport st from './index.module.css';\nimport Cart from './Cart/index';\nimport ROUTE_PATHS from '../../routes/routes';\nimport AddProduct from './AddProduct';\n\nconst Header = () => (\n  <header className={st.headerStyle}>\n    <div className={st.headerWrapper}>\n      <h1 className={st.logo}>\n        <Link to={ROUTE_PATHS.HOME}>Olx</Link>\n      </h1>\n      <div className={st.actions}>\n        <h1>\n          <Link to={ROUTE_PATHS.MY_PRODUCTS}>My products</Link>\n        </h1>\n        <AddProduct />\n        <h1>\n          <Link to={ROUTE_PATHS.MY_ORDERS}>Orders</Link>\n        </h1>\n        <Cart />\n      </div>\n    </div>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport st from './index.module.css';\nimport Header from '../../components/Header/index';\n\nconst MainLayout = ({ children }) => (\n  <div className={st.siteContainer}>\n    <Header />\n    <main className={st.mainContainer}>{children}</main>\n  </div>\n);\n\nexport default MainLayout;\n","import { API_ROUTES } from './apiRoutes';\nimport { httpClient } from './client';\n\nconst postOrder = async (payload) => {\n  const requestObject = {\n    order: {\n      pieces: payload.map((product) => ({ productId: product.id, count: product.quantity })),\n    },\n  };\n  const response = await httpClient.post(API_ROUTES.ORDERS, requestObject);\n  return response.data;\n};\n\nconst getById = async (id) => {\n  const response = await httpClient.get(API_ROUTES.ORDER_BY_ID(id));\n  return response.data;\n};\n\nconst getAll = async () => {\n  const response = await httpClient.get(API_ROUTES.ORDERS);\n  return response.data;\n};\n\nconst orderService = {\n  postOrder,\n  getById,\n  getAll,\n};\n\nexport default orderService;\n","import { createAsyncThunk, createEntityAdapter, createSlice } from '@reduxjs/toolkit';\nimport orderService from '../api/orderService';\nimport { orderByIdActions } from '../utils/constants';\n\nconst ordersAdapter = createEntityAdapter();\n\nconst initialState = ordersAdapter.getInitialState({\n  status: 'idle',\n  error: null,\n});\n\n// commented code according to hw-4 guidelines\n\n// export const fetchOrderById = createAsyncThunk(\n//   'orders/getOrderById',\n//   async (id) => {\n//     const response = await orderService.getById(id);\n//     return response;\n//   }\n// );\n\nexport const fetchOrders = createAsyncThunk(\n  'orders/getOrder',\n  async () => {\n    const response = await orderService.getAll();\n    return response;\n  }\n);\n\nconst ordersSlice = createSlice({\n  name: 'orders',\n  initialState,\n  reducers: {\n    resetOrdersSlice: (state) => initialState,\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(orderByIdActions.start, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(orderByIdActions.success, (state, action) => {\n        state.status = 'succeeded';\n        ordersAdapter.setAll(state, [action.payload]);\n      })\n      .addCase(orderByIdActions.error, (state) => {\n        state.status = 'error';\n        state.error = 'Cannot get order';\n      })\n      .addCase(fetchOrders.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchOrders.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        ordersAdapter.setAll(state, action.payload.items);\n      })\n      .addCase(fetchOrders.rejected, (state) => {\n        state.status = 'error';\n        state.error = 'Cannot get orders';\n      });\n  },\n});\n\nexport const {\n  resetOrdersSlice,\n} = ordersSlice.actions;\n\nexport default ordersSlice.reducer;\n\nexport const selectOrdersStatus = (state) => state.orders.status;\n\nexport const {\n  selectAll: selectAllOrders,\n  selectById: selectOrderById,\n  selectIds: selectOrderIds,\n} = ordersAdapter.getSelectors((state) => state.orders);\n","import { takeLatest, put, call } from 'redux-saga/effects';\nimport { createOrderActions } from '../utils/constants';\n\nimport orderService from '../api/orderService';\n\nfunction* createOrder({ payload }) {\n  const { start, success, error } = createOrderActions;\n  yield put(start);\n\n  try {\n    const response = yield call(orderService.postOrder, payload);\n    yield put(success(response));\n  } catch (e) {\n    yield put(error(e));\n  }\n}\n\nexport function* createOrderWatcher() {\n  yield takeLatest(createOrderActions.init, createOrder);\n}\n","import { takeLatest, put, call } from 'redux-saga/effects';\nimport { orderByIdActions } from '../utils/constants';\n\nimport orderService from '../api/orderService';\n\nfunction* fetchOrder({ payload }) {\n  const { start, success, error } = orderByIdActions;\n  yield put(start);\n\n  try {\n    const response = yield call(orderService.getById, `${payload}`);\n    yield put(success(response));\n  } catch (e) {\n    yield put(error(e));\n  }\n}\n\nexport function* fetchOrderWatcher() {\n  yield takeLatest(orderByIdActions.init, fetchOrder);\n}\n","import { all } from 'redux-saga/effects';\nimport { createOrderWatcher } from './sagas/createOrderSaga';\nimport { fetchOrderWatcher } from './sagas/fetchOrderSaga';\n\nexport default function* rootSaga() {\n  yield all([fetchOrderWatcher(), createOrderWatcher()]);\n}\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport createSagaMiddleware from 'redux-saga';\nimport productsReducer from './productsSlice';\nimport cartReducer from './cartSlice';\nimport ordersReducer from './ordersSlice';\nimport rootSaga from '../rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\nexport default configureStore({\n  reducer: {\n    products: productsReducer,\n    cart: cartReducer,\n    orders: ordersReducer,\n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(sagaMiddleware),\n});\n\nsagaMiddleware.run(rootSaga);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport st from './index.module.css';\nimport { selectProductById } from '../../../store/productsSlice';\nimport Preloader from '../../Preloader';\nimport ROUTE_PATHS from '../../../routes/routes';\n\nconst ProductCardEditable = ({ productId, handleFormToggle }) => {\n  const product = useSelector((state) => selectProductById(state, productId));\n\n  if (!product) return <Preloader />;\n\n  return (\n    <div className={st.cardContainer}>\n      <div className={st.cardInner}>\n        <div className={st.generalInfo}>\n          <h2 className={st.productName}>\n            <Link to={ROUTE_PATHS.PRODUCT_ID(productId)}>{product.name}</Link>\n          </h2>\n          <span>Origin: {product.origin}</span>\n        </div>\n        <div style={{ display: 'flex' }}>\n          <div className={st.additionalInfo}>\n            <div>\n              Created: {moment(product.createdAt).format('YYYY-MM-DD HH:MM:SS')}\n            </div>\n            <div>\n              Updated: {moment(product.updatedAt).format('YYYY-MM-DD HH:MM:SS')}\n            </div>\n          </div>\n          <div className={st.buyInfo}>\n            <span style={{ textAlign: 'center' }}>{product.price}₴</span>\n            <button\n              className={st.buyButton}\n              onClick={() => handleFormToggle(product)}\n            >\n              Edit\n            </button>\n          </div>\n        </div>\n      </div>\n    </div >\n  );\n};\n\nProductCardEditable.propTypes = {\n  productId: PropTypes.string.isRequired,\n  handleFormToggle: PropTypes.func.isRequired,\n};\n\nexport default ProductCardEditable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProductCardEditable from '../../ProductCard/ProductCardEditable';\n\nconst ProductListEditable = ({ productIds, handleFormToggle }) => productIds.map(\n  (id) => <ProductCardEditable productId={id} key={id} handleFormToggle={handleFormToggle} />\n);\n\nProductListEditable.propTypes = {\n  productIds: PropTypes.arrayOf(PropTypes.string),\n  handleFormToggle: PropTypes.func.isRequired,\n};\n\nexport default ProductListEditable;\n","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport st from './index.module.css';\nimport productService from '../../../api/productService';\nimport formStyles from '../formStyles.module.css';\nimport { editProduct } from '../../../store/productsSlice';\nimport { options } from '../../../utils/constants';\nimport { productSchema } from '../../../.yup/productSchema';\nimport Form from '../Form/Form';\nimport { defaultEditProductForm } from '../../../PropTypes/productTypes';\n\nconst EditProductForm = ({\n  initialObject: {\n    name, origin, price, id,\n  }, onClose,\n}) => {\n  const dispatch = useDispatch();\n\n  const [submitMessage, setSubmitMessage] = useState('');\n  const [submitError, setSubmitError] = useState(false);\n  const [formDisabled, setFormDisabled] = useState(false);\n\n  const defaultValues = { // additional object for better code readibility\n    name,\n    price,\n    origin,\n  };\n\n  const {\n    register, control, handleSubmit, formState: { errors, isDirty }, reset,\n  } = useForm({\n    defaultValues,\n    resolver: yupResolver(productSchema),\n  });\n\n  const onSubmit = async (data) => {\n    setFormDisabled(true);\n\n    const updateObj = { product: data, id };\n    const response = await productService.editProduct(updateObj);\n    if (response?.isError) {\n      setSubmitError(true);\n      if (response.message.includes('Duplicate key value violates unique constraint')) {\n        setSubmitMessage('Product with a given name already exists.');\n      } else {\n        setSubmitMessage('Unknown error.');\n      }\n    } else {\n      dispatch(editProduct(updateObj));\n      setSubmitError(false);\n      setSubmitMessage('Product edited successfully');\n      onClose();\n    }\n    setFormDisabled(false);\n  };\n\n  return (\n    <Form\n      handleSubmit={handleSubmit}\n      onSubmit={onSubmit}\n      formDisabled={formDisabled}\n      errors={errors}\n      register={register}\n      control={control}\n      options={options}\n      submitError={submitError}\n      submitMessage={submitMessage}\n    >\n      <div className={st.formActions}>\n        <button\n          type=\"button\"\n          onClick={() => reset()}\n          className={`${formStyles.formButton} ${formStyles.clearButton}`}\n          disabled={!isDirty}\n        >Clear</button>\n        <button\n          type=\"submit\"\n          className={`${formStyles.formButton} ${formStyles.editButton}`}\n          disabled={!isDirty}\n        >Edit</button>\n      </div>\n    </Form>\n  );\n};\n\nEditProductForm.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  initialObject: PropTypes.shape(defaultEditProductForm),\n};\n\nexport default EditProductForm;\n","import PropTypes from 'prop-types';\n\nexport const defaultProduct = {\n  isEditable: PropTypes.bool.isRequired,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  origin: PropTypes.string.isRequired,\n  createdAt: PropTypes.string.isRequired,\n  updatedAt: PropTypes.string.isRequired,\n};\n\nexport const defaultEditProductForm = {\n  name: PropTypes.string,\n  origin: PropTypes.string,\n  price: PropTypes.number,\n  id: PropTypes.string,\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSearchParams } from 'react-router-dom';\nimport usePriceInputs from '../../hooks/usePriceInputs';\nimport {\n  fetchEditableProducts,\n  resetProductsSlice,\n  selectPaginationInfo,\n  selectProductIds,\n  selectStatus,\n  setPage,\n  setPerPage,\n} from '../../store/productsSlice';\nimport { pruneObject } from '../../utils/pruneObject';\nimport { toSearchObject } from '../../utils/toSearchObject';\nimport CountryFilter from '../../components/CountryFilter';\nimport ErrorCard from '../../components/ErrorCard';\nimport Pagination from '../../components/Pagination';\nimport PerPage from '../../components/PerPage';\nimport Preloader from '../../components/Preloader';\nimport PriceFilter from '../../components/PriceFilter';\nimport st from './index.module.css';\nimport ProductListEditable from '../../components/ProductList/ProductListEditable';\nimport Modal from '../../components/Modal';\nimport EditProductForm from '../../components/Forms/EditProductForm';\nimport useDebouncedValues from '../../hooks/useDebouncedValues';\nimport { options, paginationOptions } from '../../utils/constants';\n\nconst MyProductsPage = () => {\n  const dispatch = useDispatch();\n  const products = useSelector(selectProductIds);\n  const paginationInfo = useSelector(selectPaginationInfo);\n\n  const { page } = paginationInfo;\n\n  const status = useSelector(selectStatus);\n\n  const [show, setShow] = useState(false);\n  const [initFormObject, setInitFormObject] = useState({});\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const [selectedCountries, setSelectedCountries] = useState(\n    searchParams\n      .get('origins')\n      ?.split(',')\n      .map((country) => options.find((option) => option.value === country)) || []\n  );\n  const [selectedPerPage, setSelectedPerPage] = useState(\n    paginationOptions.find((option) => option.value === parseInt(searchParams.get('perPage'), 10))\n    || paginationOptions[0]\n  );\n  const {\n    minPrice, maxPrice, ...priceHandlers\n  } = usePriceInputs(searchParams);\n\n  const handleCountryChange = (selected) => {\n    setSelectedCountries(selected);\n  };\n  const handlePerPageChange = (selected) => {\n    setSelectedPerPage(selected);\n    dispatch(setPerPage);\n  };\n\n  const handleFormToggle = (obj) => { // this function is used in ProductList->ProductCard->edit button to get initObj\n    setInitFormObject(obj);\n    setShow(true);\n  };\n\n  const handleSearch = (e) => {\n    if (e) e.preventDefault();\n\n    const countries = selectedCountries.map((el) => el.value);\n\n    const params = {\n      origins: [countries],\n      minPrice,\n      maxPrice,\n      perPage: selectedPerPage.value,\n    };\n    const parameters = pruneObject(params);\n    setSearchParams(parameters);\n  };\n\n  const parameters = toSearchObject(searchParams);\n\n  useEffect(() => {\n    if (status !== 'idle' && status !== 'loading') dispatch(fetchEditableProducts({ page, parameters }));\n  }, [page, dispatch, searchParams]);\n\n  const [\n    debouncedCountries,\n    debouncedMinPrice,\n    debouncedMaxPrice,\n  ] = useDebouncedValues(selectedCountries, minPrice, maxPrice, 500);\n  useEffect(() => {\n    if (status !== 'idle') {\n      handleSearch();\n    }\n  }, [debouncedCountries, debouncedMinPrice, debouncedMaxPrice]);\n\n  useEffect(() => {\n    if (status === 'idle') dispatch(fetchEditableProducts({ page: 1, parameters }));\n    return () => {\n      dispatch(resetProductsSlice());\n    };\n  }, []);\n\n  if (status === 'error') return <ErrorCard />;\n  if (status === 'loading' || status === 'idle') return <Preloader />;\n\n  return (\n    <div className={st.productPageWrapper}>\n      <Modal\n        show={show}\n        onClose={() => setShow(false)}\n        title='Edit product'\n      >\n        <EditProductForm\n          onClose={() => setShow(false)}\n          initialObject={initFormObject}// get initFormObject in handleFormToggle function\n        />\n      </Modal>\n      <form onSubmit={(e) => handleSearch(e)}>\n        <CountryFilter\n          options={options}\n          handleCountryChange={handleCountryChange}\n          selectedCountries={selectedCountries}\n        />\n        <p className={st.filterLabel}>Price</p>\n        <PriceFilter\n          handlers={priceHandlers}\n          minPrice={minPrice}\n          maxPrice={maxPrice}\n        />\n        <p className={st.filterLabel}>Items per page</p>\n        <PerPage\n          options={paginationOptions}\n          selectedPerPage={selectedPerPage}\n          handlePerPageChange={handlePerPageChange}\n        />\n        <button type=\"submit\" className={st.filterSearch}>Search</button>\n      </form>\n      <ProductListEditable\n        productIds={products}\n        show={show}\n        handleFormToggle={handleFormToggle}\n      />\n      <Pagination\n        totalItems={paginationInfo.totalItems}\n        perPage={paginationInfo.perPage}\n        page={page}\n        handler={(p) => dispatch(setPage(p))}\n      />\n    </div>\n  );\n};\n\nexport default MyProductsPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ROUTE_PATHS from '../../../routes/routes';\nimport st from './index.module.css';\n\nconst ProductCardOrder = ({ product }) => {\n  const price = product.count * product.product.price;\n  return (\n    <div className={st.productCardOrder}>\n      <h3 className={st.productName}>\n        x{product.count} <Link to={ROUTE_PATHS.PRODUCT_ID(product.product.id)}>{product.product.name}</Link>\n      </h3>\n      <p className={st.price}>{price}₴</p>\n    </div>\n  );\n};\n\nexport default ProductCardOrder;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ROUTE_PATHS from '../../routes/routes';\nimport { selectOrderById } from '../../store/ordersSlice';\nimport ProductCardOrder from '../ProductCard/ProductCardOrder';\nimport st from './index.module.css';\n\nconst OrderCard = ({ id, isList }) => {\n  const order = useSelector((state) => selectOrderById(state, id));\n\n  const price = order.pieces.reduce(\n    (prev, curr) => prev + curr.product.price * curr.count,\n    0\n  );\n  return (\n    <div className={`${st.orderContainer} ${isList ? st.border : ''}`}>\n      <h2><Link to={ROUTE_PATHS.ORDER_ID(order.id)}>Order id: {order.id}</Link></h2>\n      {order.pieces.map((product) => <ProductCardOrder product={product} key={product.id} />)}\n      <h2 className={st.total}>Total: <span>{price}₴</span></h2>\n    </div>\n  );\n};\n\nOrderCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  isList: PropTypes.bool,\n};\n\nexport default OrderCard;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport ErrorCard from '../../components/ErrorCard';\nimport OrderCard from '../../components/OrderCard';\nimport Preloader from '../../components/Preloader';\nimport {\n  resetOrdersSlice, selectOrderById, selectOrdersStatus,\n} from '../../store/ordersSlice';\nimport { orderByIdActions } from '../../utils/constants';\nimport st from './index.module.css';\n\nconst SingleOrderPage = () => {\n  const dispatch = useDispatch();\n\n  const { id } = useParams();\n\n  const status = useSelector(selectOrdersStatus);\n  const order = useSelector((state) => selectOrderById(state, id));\n\n  useEffect(() => {\n    if (!order) dispatch(resetOrdersSlice());\n    if (status === 'idle') dispatch(orderByIdActions.init(id));\n  }, []);\n\n  if (status === 'error') return <ErrorCard />;\n  if (status === 'loading' || status === 'idle') return <Preloader />;\n\n  return (\n    <div className={st.ordersContainer}>\n      <OrderCard id={order.id} />\n    </div>\n  );\n};\n\nexport default SingleOrderPage;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ErrorCard from '../../components/ErrorCard';\nimport OrderCard from '../../components/OrderCard';\nimport Preloader from '../../components/Preloader';\nimport st from './index.module.css';\nimport {\n  fetchOrders, resetOrdersSlice, selectOrderIds, selectOrdersStatus,\n} from '../../store/ordersSlice';\nimport { mapReverse } from '../../utils/mapReverse';\n\nconst OrdersPage = () => {\n  const dispatch = useDispatch();\n\n  const status = useSelector(selectOrdersStatus);\n  const orderIds = mapReverse(useSelector(selectOrderIds));// reverse to show most recent order first\n\n  useEffect(() => {\n    dispatch(resetOrdersSlice());\n  }, []);\n  useEffect(() => {\n    if (status === 'idle') dispatch(fetchOrders());\n  }, [status]);\n\n  if (status === 'error') return <ErrorCard />;\n  if (status === 'loading' || status === 'idle') return <Preloader />;\n\n  return (\n    <div className={st.ordersContainer}>\n      {orderIds.map((orderId) => <OrderCard id={orderId} key={orderId} isList={true} />)}\n    </div >\n  );\n};\n\nexport default OrdersPage;\n","export const mapReverse = (array) => {\n  const result = [];\n  for (let i = 0; i < array.length; i++) {\n    result.push(array[array.length - i - 1]);\n  }\n  return result;\n};\n","import React from 'react';\nimport {\n  BrowserRouter, Routes, Route, Navigate,\n} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport ProductsPage from './pages/ProductsPage/index';\nimport SingleProductPage from './pages/ProductInfo/index';\nimport CartPage from './pages/CartPage/index';\nimport st from './app.module.css';\nimport MainLayout from './layouts/MainLayout';\nimport ROUTE_PATHS from './routes/routes';\nimport store from './store/store';\nimport MyProductsPage from './pages/MyProductsPage';\nimport SingleOrderPage from './pages/SingleOrderPage';\nimport OrdersPage from './pages/OrdersPage';\n\nconst App = () => (\n  <div className={`App ${st.app}`}>\n    <Provider store={store}>\n      <BrowserRouter>\n        <MainLayout>\n          <Routes>\n            <Route path={ROUTE_PATHS.HOME} element={<ProductsPage />} />\n            <Route path={ROUTE_PATHS.PRODUCT} element={<SingleProductPage />} />\n            <Route path={ROUTE_PATHS.CART} element={<CartPage />} />\n            <Route path={ROUTE_PATHS.MY_PRODUCTS} element={<MyProductsPage />} />\n            <Route path={ROUTE_PATHS.ORDER} element={<SingleOrderPage />} />\n            <Route path={ROUTE_PATHS.MY_ORDERS} element={<OrdersPage />} />\n            <Route\n              path=\"*\"\n              element={<Navigate to={ROUTE_PATHS.HOME} />}\n            />\n          </Routes>\n        </MainLayout>\n      </BrowserRouter>\n    </Provider>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"ProductCardExtended_cardContainer__31zR5\",\"cardInner\":\"ProductCardExtended_cardInner__1_Cuv\",\"productName\":\"ProductCardExtended_productName__mPWuU\",\"generalInfo\":\"ProductCardExtended_generalInfo__3HI5r\",\"buyInfo\":\"ProductCardExtended_buyInfo__3tpRC\",\"buyButton\":\"ProductCardExtended_buyButton__2pXDN\",\"additionalInfo\":\"ProductCardExtended_additionalInfo__SFtFt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__2HkJE\",\"modalHeader\":\"Modal_modalHeader__1asmA\",\"modalFooter\":\"Modal_modalFooter__2AHYf\",\"modalContent\":\"Modal_modalContent__1o7x1\",\"modalTitle\":\"Modal_modalTitle__6MMxo\",\"modalBody\":\"Modal_modalBody__13bpk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"ProductCardEditable_cardContainer__2KK_a\",\"cardInner\":\"ProductCardEditable_cardInner__12gLo\",\"productName\":\"ProductCardEditable_productName__NhZh-\",\"generalInfo\":\"ProductCardEditable_generalInfo__b1K9Q\",\"buyInfo\":\"ProductCardEditable_buyInfo__2nzwP\",\"buyButton\":\"ProductCardEditable_buyButton__1UUXV\",\"additionalInfo\":\"ProductCardEditable_additionalInfo__1RApm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"ProductCard_cardContainer__3YoR9\",\"cardInner\":\"ProductCard_cardInner__23iOL\",\"productName\":\"ProductCard_productName__3h49T\",\"generalInfo\":\"ProductCard_generalInfo__3Ellg\",\"buyInfo\":\"ProductCard_buyInfo__2LdSO\",\"buyButton\":\"ProductCard_buyButton__1dQ7u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Preloader_wrapper__1M8IC\",\"profileMainLoader\":\"Preloader_profileMainLoader__2dDfD\",\"loader\":\"Preloader_loader__dJK1W\",\"circularLoader\":\"Preloader_circularLoader__2t9Nv\",\"rotate\":\"Preloader_rotate__1ph_M\",\"loaderPath\":\"Preloader_loaderPath__3XnXN\",\"dash\":\"Preloader_dash__3eEbF\",\"color\":\"Preloader_color__XbJ2k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"priceFilter\":\"PriceFilter_priceFilter__3LTis\",\"inputWrapper\":\"PriceFilter_inputWrapper__2b5kt\",\"input\":\"PriceFilter_input__3cB6p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"productPageWrapper\":\"ProductsPage_productPageWrapper__3fX5N\",\"filterLabel\":\"ProductsPage_filterLabel__1Yt-2\",\"filterSearch\":\"ProductsPage_filterSearch__1u-FK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerStyle\":\"Header_headerStyle__2HLaA\",\"headerWrapper\":\"Header_headerWrapper__35JMq\",\"actions\":\"Header_actions__1CVWB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Cart_link__3ZYi1\",\"flex\":\"Cart_flex__3Lhoo\",\"price\":\"Cart_price__266vR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"productPageWrapper\":\"MyProductsPage_productPageWrapper__qOP2K\",\"filterLabel\":\"MyProductsPage_filterLabel__1K-I6\",\"filterSearch\":\"MyProductsPage_filterSearch__25s1Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formButton\":\"formStyles_formButton__2PpCv\",\"clearButton\":\"formStyles_clearButton__GmP4m\",\"editButton\":\"formStyles_editButton__3SQro\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cartPageWrapper\":\"CartPage_cartPageWrapper__E1uqk\",\"totalPrice\":\"CartPage_totalPrice__3LvMb\",\"submitOrder\":\"CartPage_submitOrder__1qbsj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"productCardOrder\":\"ProductCardOrder_productCardOrder__3Zvob\",\"productName\":\"ProductCardOrder_productName__1PIDS\",\"price\":\"ProductCardOrder_price__2gZvA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderContainer\":\"OrderCard_orderContainer__1DhB0\",\"border\":\"OrderCard_border__3IXeF\",\"total\":\"OrderCard_total__3h3jr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationContainer\":\"Pagination_paginationContainer__2yis3\",\"activePage\":\"Pagination_activePage__1rRb-\",\"paginationItem\":\"Pagination_paginationItem__3Nu54\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"siteContainer\":\"MainLayout_siteContainer__2ILhS\",\"mainContainer\":\"MainLayout_mainContainer__tL2mm\"};"],"sourceRoot":""}